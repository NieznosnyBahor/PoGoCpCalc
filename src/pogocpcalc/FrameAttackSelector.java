/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pogocpcalc;

import java.util.ArrayList;
import javax.swing.DefaultListModel;

/**
 *
 * @author admin
 */
public class FrameAttackSelector extends javax.swing.JFrame {

    static String typeOfWindow;

    /**
     * Creates new form FrameAttackSelector
     */
    public FrameAttackSelector(String typeOfWindow) {
        this.typeOfWindow = typeOfWindow;

        initComponents();
        if ("fast".equals(typeOfWindow)) {
            jLabel1.setText("Fast Attack");
        } else {
            jLabel1.setText("Charge Attack");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jtBug = new javax.swing.JToggleButton();
        jtDark = new javax.swing.JToggleButton();
        jtDragon = new javax.swing.JToggleButton();
        jtElectric = new javax.swing.JToggleButton();
        jtFairy = new javax.swing.JToggleButton();
        jtFight = new javax.swing.JToggleButton();
        jtIce = new javax.swing.JToggleButton();
        jtWater = new javax.swing.JToggleButton();
        jtSteel = new javax.swing.JToggleButton();
        jtGround = new javax.swing.JToggleButton();
        jtGrass = new javax.swing.JToggleButton();
        jtRock = new javax.swing.JToggleButton();
        jtPsychic = new javax.swing.JToggleButton();
        jtGhost = new javax.swing.JToggleButton();
        jtFly = new javax.swing.JToggleButton();
        jtPoison = new javax.swing.JToggleButton();
        jtNormal = new javax.swing.JToggleButton();
        jtFire = new javax.swing.JToggleButton();
        jPanel2 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>(model);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jtBug.setBackground(new java.awt.Color(168, 184, 32));
        jtBug.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jtBug.setText("Bug");
        jtBug.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtBugActionPerformed(evt);
            }
        });

        jtDark.setBackground(new java.awt.Color(112, 88, 72));
        jtDark.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jtDark.setText("Dark");
        jtDark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtDarkActionPerformed(evt);
            }
        });

        jtDragon.setBackground(new java.awt.Color(112, 56, 248));
        jtDragon.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jtDragon.setText("Dragn");
        jtDragon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtDragonActionPerformed(evt);
            }
        });

        jtElectric.setBackground(new java.awt.Color(248, 208, 48));
        jtElectric.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jtElectric.setText("Elect");
        jtElectric.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtElectricActionPerformed(evt);
            }
        });

        jtFairy.setBackground(new java.awt.Color(238, 153, 172));
        jtFairy.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jtFairy.setText("Fairy");
        jtFairy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtFairyActionPerformed(evt);
            }
        });

        jtFight.setBackground(new java.awt.Color(192, 48, 40));
        jtFight.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jtFight.setText("Fight");
        jtFight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtFightActionPerformed(evt);
            }
        });

        jtIce.setBackground(new java.awt.Color(152, 216, 216));
        jtIce.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jtIce.setText("Ice");
        jtIce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtIceActionPerformed(evt);
            }
        });

        jtWater.setBackground(new java.awt.Color(104, 144, 240));
        jtWater.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jtWater.setText("Water");
        jtWater.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtWaterActionPerformed(evt);
            }
        });

        jtSteel.setBackground(new java.awt.Color(184, 184, 208));
        jtSteel.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jtSteel.setText("Steel");
        jtSteel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtSteelActionPerformed(evt);
            }
        });

        jtGround.setBackground(new java.awt.Color(224, 192, 104));
        jtGround.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jtGround.setText("Groud");
        jtGround.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtGroundActionPerformed(evt);
            }
        });

        jtGrass.setBackground(new java.awt.Color(120, 200, 80));
        jtGrass.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jtGrass.setText("Grass");
        jtGrass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtGrassActionPerformed(evt);
            }
        });

        jtRock.setBackground(new java.awt.Color(184, 160, 56));
        jtRock.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jtRock.setText("Rock");
        jtRock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtRockActionPerformed(evt);
            }
        });

        jtPsychic.setBackground(new java.awt.Color(248, 88, 136));
        jtPsychic.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jtPsychic.setText("Psych");
        jtPsychic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtPsychicActionPerformed(evt);
            }
        });

        jtGhost.setBackground(new java.awt.Color(112, 88, 152));
        jtGhost.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jtGhost.setText("Ghost");
        jtGhost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtGhostActionPerformed(evt);
            }
        });

        jtFly.setBackground(new java.awt.Color(168, 144, 240));
        jtFly.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jtFly.setText("Fly");
        jtFly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtFlyActionPerformed(evt);
            }
        });

        jtPoison.setBackground(new java.awt.Color(160, 64, 160));
        jtPoison.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jtPoison.setText("Poisn");
        jtPoison.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtPoisonActionPerformed(evt);
            }
        });

        jtNormal.setBackground(new java.awt.Color(168, 168, 120));
        jtNormal.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jtNormal.setText("Norml");
        jtNormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtNormalActionPerformed(evt);
            }
        });

        jtFire.setBackground(new java.awt.Color(240, 128, 48));
        jtFire.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jtFire.setText("Fire");
        jtFire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtFireActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jtBug, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtDark, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtDragon, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtElectric, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtFairy, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtFight, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jtNormal, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtPoison, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtPsychic, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtRock, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtSteel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtWater, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jtFire, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtFly, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtGhost, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtGrass, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtGround, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtIce, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtBug)
                    .addComponent(jtDragon)
                    .addComponent(jtDark)
                    .addComponent(jtElectric)
                    .addComponent(jtFairy)
                    .addComponent(jtFight))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtFly)
                        .addComponent(jtGhost)
                        .addComponent(jtGrass)
                        .addComponent(jtGround)
                        .addComponent(jtIce))
                    .addComponent(jtFire))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtNormal)
                    .addComponent(jtPsychic)
                    .addComponent(jtPoison)
                    .addComponent(jtRock)
                    .addComponent(jtSteel)
                    .addComponent(jtWater)))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextField1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Apply");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jTextField1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Attack");

        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtWaterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtWaterActionPerformed
        updateState(typeOfWindow);
        repaint();
    }//GEN-LAST:event_jtWaterActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        updateState(typeOfWindow);
        repaint();
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jtBugActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtBugActionPerformed
        updateState(typeOfWindow);
        repaint();
    }//GEN-LAST:event_jtBugActionPerformed

    private void jtSteelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtSteelActionPerformed
        updateState(typeOfWindow);
        repaint();        // TODO add your handling code here:
    }//GEN-LAST:event_jtSteelActionPerformed

    private void jtRockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtRockActionPerformed
        updateState(typeOfWindow);
        repaint();        // TODO add your handling code here:
    }//GEN-LAST:event_jtRockActionPerformed

    private void jtPsychicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtPsychicActionPerformed
        updateState(typeOfWindow);
        repaint();        // TODO add your handling code here:
    }//GEN-LAST:event_jtPsychicActionPerformed

    private void jtPoisonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtPoisonActionPerformed
        updateState(typeOfWindow);
        repaint();        // TODO add your handling code here:
    }//GEN-LAST:event_jtPoisonActionPerformed

    private void jtNormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtNormalActionPerformed
        updateState(typeOfWindow);
        repaint();        // TODO add your handling code here:
    }//GEN-LAST:event_jtNormalActionPerformed

    private void jtIceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtIceActionPerformed
        updateState(typeOfWindow);
        repaint();        // TODO add your handling code here:
    }//GEN-LAST:event_jtIceActionPerformed

    private void jtGroundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtGroundActionPerformed
        updateState(typeOfWindow);
        repaint();        // TODO add your handling code here:
    }//GEN-LAST:event_jtGroundActionPerformed

    private void jtGrassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtGrassActionPerformed
        updateState(typeOfWindow);
        repaint();        // TODO add your handling code here:
    }//GEN-LAST:event_jtGrassActionPerformed

    private void jtGhostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtGhostActionPerformed
        updateState(typeOfWindow);
        repaint();        // TODO add your handling code here:
    }//GEN-LAST:event_jtGhostActionPerformed

    private void jtFlyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtFlyActionPerformed
        updateState(typeOfWindow);
        repaint();        // TODO add your handling code here:
    }//GEN-LAST:event_jtFlyActionPerformed

    private void jtFireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtFireActionPerformed
        updateState(typeOfWindow);
        repaint();        // TODO add your handling code here:
    }//GEN-LAST:event_jtFireActionPerformed

    private void jtFightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtFightActionPerformed
        updateState(typeOfWindow);
        repaint();        // TODO add your handling code here:
    }//GEN-LAST:event_jtFightActionPerformed

    private void jtFairyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtFairyActionPerformed
        updateState(typeOfWindow);
        repaint();        // TODO add your handling code here:
    }//GEN-LAST:event_jtFairyActionPerformed

    private void jtElectricActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtElectricActionPerformed
        updateState(typeOfWindow);
        repaint();        // TODO add your handling code here:
    }//GEN-LAST:event_jtElectricActionPerformed

    private void jtDragonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtDragonActionPerformed
        updateState(typeOfWindow);
        repaint();        // TODO add your handling code here:
    }//GEN-LAST:event_jtDragonActionPerformed

    private void jtDarkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtDarkActionPerformed
        updateState(typeOfWindow);
        repaint();        // TODO add your handling code here:
    }//GEN-LAST:event_jtDarkActionPerformed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        updateState(typeOfWindow);
        repaint();
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String selectedAttack = jList1.getSelectedValue();
        String parts[] = selectedAttack.split(" @ ");
        if ("fast".equals(typeOfWindow)) {
            AttackFast af = Database.stringToFastAttack(parts[0]);
            int idAttack = Database.fastAttackToIntID(af);
            PoGoCpCalc.frame.combo_fast.setSelectedIndex(idAttack);
        } else if ("charge".equals(typeOfWindow)) {
            AttackCharge ac = Database.stringToChargeAttack(parts[0]);
            int idAttack = Database.chargeAttackToIntID(ac);
            PoGoCpCalc.frame.combo_charge.setSelectedIndex(idAttack);
        } else {
            System.out.println("Somethin wrong kurwa!");
        }

        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        repaint();
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        updateState(typeOfWindow);
        repaint();
    }//GEN-LAST:event_jTextField1KeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameAttackSelector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameAttackSelector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameAttackSelector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameAttackSelector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameAttackSelector(typeOfWindow).setVisible(true);
            }
        });
    }
    DefaultListModel<String> model = new DefaultListModel<>();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    protected javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToggleButton jtBug;
    private javax.swing.JToggleButton jtDark;
    private javax.swing.JToggleButton jtDragon;
    private javax.swing.JToggleButton jtElectric;
    private javax.swing.JToggleButton jtFairy;
    private javax.swing.JToggleButton jtFight;
    private javax.swing.JToggleButton jtFire;
    private javax.swing.JToggleButton jtFly;
    private javax.swing.JToggleButton jtGhost;
    private javax.swing.JToggleButton jtGrass;
    private javax.swing.JToggleButton jtGround;
    private javax.swing.JToggleButton jtIce;
    private javax.swing.JToggleButton jtNormal;
    private javax.swing.JToggleButton jtPoison;
    private javax.swing.JToggleButton jtPsychic;
    private javax.swing.JToggleButton jtRock;
    private javax.swing.JToggleButton jtSteel;
    private javax.swing.JToggleButton jtWater;
    // End of variables declaration//GEN-END:variables

    private void updateState(String typeOfWindow) {

        model.clear();
        boolean state[] = {jtBug.isSelected(), jtDark.isSelected(), jtDragon.isSelected(), jtElectric.isSelected(),
            jtFairy.isSelected(), jtFight.isSelected(), jtFire.isSelected(), jtFly.isSelected(),
            jtGhost.isSelected(), jtGrass.isSelected(), jtGround.isSelected(), jtIce.isSelected(),
            jtNormal.isSelected(), jtPoison.isSelected(), jtPsychic.isSelected(), jtRock.isSelected(),
            jtSteel.isSelected(), jtWater.isSelected()};
        String text = jTextField1.getText();

        if ("fast".equals(typeOfWindow)) {

            ArrayList<AttackFast> view = Database.getViewSelectedFastAttack(state, text);

            for (int i = 0; i < view.size(); i++) {
                model.addElement(view.get(i).name + " @ " + view.get(i).type);
                repaint();
            }
        } else if ("charge".equals(typeOfWindow)) {
            ArrayList<AttackCharge> view = Database.getViewSelectedChargeAttack(state, text);

            for (int i = 0; i < view.size(); i++) {
                model.addElement(view.get(i).name + " @ " + view.get(i).type);
                repaint();
            }
        } else {
            System.out.println("Critical error!!!");
        }

    }

}
