What to do in next versions:

Mechanika rajdow
- Cp pokemona na rajdzie wzgledem tieru 
- Kalkulator dmg wzgledem pokemona
- Kalkulator dmg wzgledem rajdu
- Walka na rajdach 3-4-5 tierowych z poszczegolnymi pokemonami
- Wykresy wzrostu cp/stat/sily i innych pierdol pokemonow

NAJWAZNIEJSZE
ROZWÓJ!!!ONE!ONE!!
W bazie danych utworzyc kolekcje statystyk danych obrazkow, atakow innych pierdol o pokemonie

% of fast attack dmg in relation to total dmg
jProgressBar1.setToolTipText("<html>" + "% of fast attack dmg in relation to total dmg" + "<br>" + ratioDMG2 + "% / " + (100 - ratioDMG2) + "%" + "<br>" + "Full time: " + time);
combo_fast.setModel(new javax.swing.DefaultComboBoxModel<>( Database.AttackFastMap.keySet().toArray(new String[Database.AttackFastMap.keySet().size()])));




        ArrayList<Pokemon> pkmn = new ArrayList<Pokemon>();

        for (int i = 0; i < PokemonList.size(); i++) {
            for (EnumTypes type : EnumTypes.values()) {

                if (       
                        (
                           ((PokemonList.get(i).getType1() == type) && state[type.getNumber(type)] == true) 
                              ||
                           ((PokemonList.get(i).getType2() == type) && state[type.getNumber(type)] == true) 
                        )
                              &&
                           (PokemonList.get(i).getName().contains(text))
                   )
                { 
                    pkmn.add(PokemonList.get(i));
                }
                else if(PokemonList.get(i).getName().contains(text))
                {
                    pkmn.add(PokemonList.get(i));
                }

            }
        }
        Set<Pokemon> set = new LinkedHashSet<>();
        set.addAll(pkmn);
        pkmn.clear();
        pkmn.addAll(set);

//        if (!text.isEmpty()) {
//            for (int i = 0; i < pkmn.size(); i++) { // dla każdego pokemona w tej liście
//                String name = pkmn.get(i).getName().toLowerCase();
//                text = text.toLowerCase();
//                
//                if(!name.startsWith(text))
//                {
//                    pkmn.remove(i);
//                }
//            }
//        }

        
        
        return pkmn;


switch (s)
        {
            case "pokemon":
            {
                
                
                break;
            }
            case "fastattack":
            {
                break;
            }
            case "chargeattack":
            {
                break;
            }
            default:
            {
                System.out.println("Critical error!!!");
            }
                    
                    
                    
        }

150	Psycho Cut,Confusion	Psychic,Shadow Ball,Hyper Beam,Focus Blast,Flamethrower,Ice Beam,Thunderbolt